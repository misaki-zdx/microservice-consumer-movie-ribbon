server:
  port: 8010
spring:
  application:
    # 指定注册到eureka server上的服务名称
    name: microservice-consumer-movie

eureka:
  client:
    service-url:
      # 指定eureka server通信地址，注意/eureka/小尾巴不能少
      defaultZone: http://user:misaki@localhost:8761/eureka/
  instance:
    # 是否注册IP到eureka server，如不指定或设为false，那就会注册主机名到eureka server
    prefer-ip-address: true

# 属性配置的优先级高于代码配置。 全局配置 去掉client name 即 user-server
#<clientName>

      #默认情况下Ribbon是懒加载的——首次请求Ribbon相关类才会初始化，这会导致首次请求过慢的问题，你可以配置饥饿加载，让Ribbon在应用启动时就初始化。
ribbon:
  NFLoadBalancerClassName: com.netflix.loadbalancer.RandomRule
  eager-load:
    # 多个用，分隔
    clients: microservice-consumer-movie
# feign 日志配置
feign:
  client:
    config:
      feignName:
        connectTimeout: 5000  # 相当于Request.Options
        readTimeout: 5000     # 相当于Request.Options
        # 配置Feign的日志级别，相当于代码配置方式中的Logger
        loggerLevel: full
        # Feign的错误解码器，相当于代码配置方式中的ErrorDecoder
        errorDecoder: com.example.SimpleErrorDecoder
        # 配置重试，相当于代码配置方式中的Retryer
        retryer: com.example.SimpleRetryer
        # 配置拦截器，相当于代码配置方式中的RequestInterceptor
        requestInterceptors:
        - com.example.FooRequestInterceptor
        - com.example.BarRequestInterceptor
        decode404: false
logging:
  level: debug
